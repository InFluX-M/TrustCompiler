< type: T_Fn, line: 1, content: fn >
< type: T_Id, line: 1, content: main >
< type: T_LP, line: 1, content: ( >
< type: T_RP, line: 1, content: ) >
< type: T_LC, line: 1, content: { >
< type: T_Let, line: 2, content: let >
< type: T_Id, line: 2, content: x >
< type: T_Assign, line: 2, content: = >
< type: T_Decimal, line: 2, content: 42 >
< type: T_Semicolon, line: 2, content: ; >
< type: T_Let, line: 3, content: let >
< type: T_Id, line: 3, content: y >
< type: T_Assign, line: 3, content: = >
< type: T_Decimal, line: 3, content: 3 >
< type: T_Semicolon, line: 3, content: ; >
< type: T_Let, line: 4, content: let >
< type: T_Id, line: 4, content: sum >
< type: T_Assign, line: 4, content: = >
< type: T_Id, line: 4, content: x >
< type: T_AOp_Trust, line: 4, content: + >
< type: T_Id, line: 4, content: y >
< type: T_Semicolon, line: 4, content: ; >
< type: T_Let, line: 5, content: let >
< type: T_Id, line: 5, content: product >
< type: T_Assign, line: 5, content: = >
< type: T_Id, line: 5, content: x >
< type: T_AOp_ML, line: 5, content: * >
< type: T_Id, line: 5, content: y >
< type: T_Semicolon, line: 5, content: ; >
< type: T_If, line: 7, content: if >
< type: T_Id, line: 7, content: sum >
< type: T_ROp_G, line: 7, content: > >
< type: T_Id, line: 7, content: product >
< type: T_LC, line: 7, content: { >
< type: T_Print, line: 8, content: println! >
< type: T_LP, line: 8, content: ( >
< type: T_String, line: 8, content: sum is greater >
< type: T_RP, line: 8, content: ) >
< type: T_Semicolon, line: 8, content: ; >
< type: T_RC, line: 9, content: } >
< type: T_Else, line: 9, content: else >
< type: T_LC, line: 9, content: { >
< type: T_Print, line: 10, content: println! >
< type: T_LP, line: 10, content: ( >
< type: T_String, line: 10, content: product is greater >
< type: T_RP, line: 10, content: ) >
< type: T_Semicolon, line: 10, content: ; >
< type: T_RC, line: 11, content: } >
< type: T_RC, line: 12, content: } >
