< type: T_Fn, line: 2, content: fn >
< type: T_Id, line: 2, content: multiply >
< type: T_LP, line: 2, content: ( >
< type: T_Id, line: 2, content: x >
< type: T_Colon, line: 2, content: : >
< type: T_Int, line: 2, content: i32 >
< type: T_Comma, line: 2, content: , >
< type: T_Id, line: 2, content: y >
< type: T_Colon, line: 2, content: : >
< type: T_Int, line: 2, content: i32 >
< type: T_RP, line: 2, content: ) >
< type: T_Arrow, line: 2, content: -> >
< type: T_Int, line: 2, content: i32 >
< type: T_LC, line: 2, content: { >
< type: T_Let, line: 3, content: let >
< type: T_Id, line: 3, content: z >
< type: T_Assign, line: 3, content: = >
< type: T_Id, line: 3, content: x >
< type: T_AOp_ML, line: 3, content: * >
< type: T_Id, line: 3, content: y >
< type: T_Semicolon, line: 3, content: ; >
< type: T_Return, line: 4, content: return >
< type: T_Id, line: 4, content: z >
< type: T_Semicolon, line: 4, content: ; >
< type: T_RC, line: 5, content: } >
< type: T_Fn, line: 7, content: fn >
< type: T_Id, line: 7, content: add >
< type: T_LP, line: 7, content: ( >
< type: T_Id, line: 7, content: a >
< type: T_Colon, line: 7, content: : >
< type: T_Int, line: 7, content: i32 >
< type: T_Comma, line: 7, content: , >
< type: T_Id, line: 7, content: b >
< type: T_Colon, line: 7, content: : >
< type: T_Int, line: 7, content: i32 >
< type: T_RP, line: 7, content: ) >
< type: T_Arrow, line: 7, content: -> >
< type: T_Int, line: 7, content: i32 >
< type: T_LC, line: 7, content: { >
< type: T_Return, line: 8, content: return >
< type: T_Id, line: 8, content: a >
< type: T_AOp_Trust, line: 8, content: + >
< type: T_Id, line: 8, content: b >
< type: T_Semicolon, line: 8, content: ; >
< type: T_RC, line: 9, content: } >
< type: T_Fn, line: 11, content: fn >
< type: T_Id, line: 11, content: create_array >
< type: T_LP, line: 11, content: ( >
< type: T_RP, line: 11, content: ) >
< type: T_Arrow, line: 11, content: -> >
< type: T_LB, line: 11, content: [ >
< type: T_Int, line: 11, content: i32 >
< type: T_Semicolon, line: 11, content: ; >
< type: T_Decimal, line: 11, content: 3 >
< type: T_RB, line: 11, content: ] >
< type: T_LC, line: 11, content: { >
< type: T_Let, line: 12, content: let >
< type: T_Id, line: 12, content: arr >
< type: T_Assign, line: 12, content: = >
< type: T_LB, line: 12, content: [ >
< type: T_Decimal, line: 12, content: 1 >
< type: T_Comma, line: 12, content: , >
< type: T_Decimal, line: 12, content: 2 >
< type: T_Comma, line: 12, content: , >
< type: T_Decimal, line: 12, content: 3 >
< type: T_RB, line: 12, content: ] >
< type: T_Semicolon, line: 12, content: ; >
< type: T_Return, line: 13, content: return >
< type: T_Id, line: 13, content: arr >
< type: T_Semicolon, line: 13, content: ; >
< type: T_RC, line: 14, content: } >
< type: T_Fn, line: 16, content: fn >
< type: T_Id, line: 16, content: print_message >
< type: T_LP, line: 16, content: ( >
< type: T_RP, line: 16, content: ) >
< type: T_LC, line: 16, content: { >
< type: T_Print, line: 17, content: println! >
< type: T_LP, line: 17, content: ( >
< type: T_String, line: 17, content: "Hello from a function!" >
< type: T_RP, line: 17, content: ) >
< type: T_Semicolon, line: 17, content: ; >
< type: T_RC, line: 18, content: } >
< type: T_Fn, line: 20, content: fn >
< type: T_Id, line: 20, content: main >
< type: T_LP, line: 20, content: ( >
< type: T_RP, line: 20, content: ) >
< type: T_LC, line: 20, content: { >
< type: T_Let, line: 21, content: let >
< type: T_Id, line: 21, content: result1 >
< type: T_Assign, line: 21, content: = >
< type: T_Id, line: 21, content: multiply >
< type: T_LP, line: 21, content: ( >
< type: T_Decimal, line: 21, content: 3 >
< type: T_Comma, line: 21, content: , >
< type: T_Decimal, line: 21, content: 4 >
< type: T_RP, line: 21, content: ) >
< type: T_Semicolon, line: 21, content: ; >
< type: T_Let, line: 22, content: let >
< type: T_Id, line: 22, content: result2 >
< type: T_Assign, line: 22, content: = >
< type: T_Id, line: 22, content: add >
< type: T_LP, line: 22, content: ( >
< type: T_Id, line: 22, content: result1 >
< type: T_Comma, line: 22, content: , >
< type: T_Decimal, line: 22, content: 10 >
< type: T_RP, line: 22, content: ) >
< type: T_Semicolon, line: 22, content: ; >
< type: T_Let, line: 23, content: let >
< type: T_Id, line: 23, content: my_array >
< type: T_Assign, line: 23, content: = >
< type: T_Id, line: 23, content: create_array >
< type: T_LP, line: 23, content: ( >
< type: T_RP, line: 23, content: ) >
< type: T_Semicolon, line: 23, content: ; >
< type: T_Id, line: 24, content: print_message >
< type: T_LP, line: 24, content: ( >
< type: T_RP, line: 24, content: ) >
< type: T_Semicolon, line: 24, content: ; >
< type: T_RC, line: 25, content: } >
