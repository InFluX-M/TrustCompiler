< type: T_Fn, line: 2, content: fn >
< type: T_Id, line: 2, content: main >
< type: T_LP, line: 2, content: ( >
< type: T_RP, line: 2, content: ) >
< type: T_LC, line: 2, content: { >
< type: T_Let, line: 3, content: let >
< type: T_Mut, line: 3, content: mut >
< type: T_Id, line: 3, content: x >
< type: T_Colon, line: 3, content: : >
< type: T_Int, line: 3, content: i32 >
< type: T_Assign, line: 3, content: = >
< type: T_Decimal, line: 3, content: 10 >
< type: T_Semicolon, line: 3, content: ; >
< type: T_Let, line: 4, content: let >
< type: T_Mut, line: 4, content: mut >
< type: T_Id, line: 4, content: y >
< type: T_Colon, line: 4, content: : >
< type: T_Int, line: 4, content: i32 >
< type: T_Assign, line: 4, content: = >
< type: T_Decimal, line: 4, content: 5 >
< type: T_Semicolon, line: 4, content: ; >
< type: T_Let, line: 5, content: let >
< type: T_Mut, line: 5, content: mut >
< type: T_Id, line: 5, content: b >
< type: T_Colon, line: 5, content: : >
< type: T_Bool, line: 5, content: bool >
< type: T_Assign, line: 5, content: = >
< type: T_False, line: 5, content: false >
< type: T_Semicolon, line: 5, content: ; >
< type: T_If, line: 7, content: if >
< type: T_Id, line: 7, content: x >
< type: T_ROp_E, line: 7, content: == >
< type: T_Decimal, line: 7, content: 10 >
< type: T_LC, line: 7, content: { >
< type: T_Id, line: 8, content: y >
< type: T_Assign, line: 8, content: = >
< type: T_Decimal, line: 8, content: 6 >
< type: T_Semicolon, line: 8, content: ; >
< type: T_Id, line: 9, content: x >
< type: T_Assign, line: 9, content: = >
< type: T_Decimal, line: 9, content: 7 >
< type: T_Semicolon, line: 9, content: ; >
< type: T_RC, line: 10, content: } >
< type: T_If, line: 12, content: if >
< type: T_Id, line: 12, content: y >
< type: T_ROp_LE, line: 12, content: <= >
< type: T_Decimal, line: 12, content: 2 >
< type: T_LOp_AND, line: 12, content: && >
< type: T_Id, line: 12, content: x >
< type: T_ROp_G, line: 12, content: > >
< type: T_Decimal, line: 12, content: 7 >
< type: T_LOp_OR, line: 12, content: || >
< type: T_Id, line: 12, content: b >
< type: T_ROp_NE, line: 12, content: != >
< type: T_False, line: 12, content: false >
< type: T_LC, line: 12, content: { >
< type: T_Id, line: 13, content: x >
< type: T_Assign, line: 13, content: = >
< type: T_Decimal, line: 13, content: 4 >
< type: T_AOp_Trust, line: 13, content: + >
< type: T_Id, line: 13, content: y >
< type: T_Semicolon, line: 13, content: ; >
< type: T_RC, line: 14, content: } >
< type: T_Else, line: 14, content: else >
< type: T_LC, line: 14, content: { >
< type: T_Id, line: 15, content: x >
< type: T_Assign, line: 15, content: = >
< type: T_Decimal, line: 15, content: 3 >
< type: T_AOp_ML, line: 15, content: * >
< type: T_Id, line: 15, content: y >
< type: T_Semicolon, line: 15, content: ; >
< type: T_RC, line: 16, content: } >
< type: T_If, line: 18, content: if >
< type: T_Id, line: 18, content: x >
< type: T_ROp_GE, line: 18, content: >= >
< type: T_Decimal, line: 18, content: 5 >
< type: T_LOp_AND, line: 18, content: && >
< type: T_Id, line: 18, content: y >
< type: T_ROp_L, line: 18, content: < >
< type: T_Decimal, line: 18, content: 7 >
< type: T_LOp_AND, line: 18, content: && >
< type: T_LOp_NOT, line: 18, content: ! >
< type: T_Id, line: 18, content: b >
< type: T_LC, line: 18, content: { >
< type: T_Id, line: 19, content: b >
< type: T_Assign, line: 19, content: = >
< type: T_True, line: 19, content: true >
< type: T_Semicolon, line: 19, content: ; >
< type: T_RC, line: 20, content: } >
< type: T_Else, line: 20, content: else >
< type: T_If, line: 20, content: if >
< type: T_Id, line: 20, content: x >
< type: T_ROp_E, line: 20, content: == >
< type: T_Decimal, line: 20, content: 3 >
< type: T_LC, line: 20, content: { >
< type: T_Id, line: 21, content: x >
< type: T_Assign, line: 21, content: = >
< type: T_Decimal, line: 21, content: 100 >
< type: T_Semicolon, line: 21, content: ; >
< type: T_RC, line: 22, content: } >
< type: T_Else, line: 22, content: else >
< type: T_LC, line: 22, content: { >
< type: T_Id, line: 23, content: b >
< type: T_Assign, line: 23, content: = >
< type: T_False, line: 23, content: false >
< type: T_Semicolon, line: 23, content: ; >
< type: T_RC, line: 24, content: } >
< type: T_RC, line: 25, content: } >
